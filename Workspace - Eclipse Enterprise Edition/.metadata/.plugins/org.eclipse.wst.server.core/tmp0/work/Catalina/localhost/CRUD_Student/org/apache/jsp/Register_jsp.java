/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.15
 * Generated at: 2023-12-27 05:40:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.Classes.*;

public final class Register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("com.Classes");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Register here</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"FormValidation.js\"></script>\r\n");
      out.write("	<style>\r\n");
      out.write("		.error-text {\r\n");
      out.write("			color: red;\r\n");
      out.write("		}\r\n");
      out.write("	</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');

	if (request.getParameter("id") == null) {
	
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<form name=\"registerForm\" action=\"Register\" method=\"Post\">\r\n");
      out.write("\r\n");
      out.write("			Name : <input class=\"form-control\" type=\"text\" name=\"name\" /> \r\n");
      out.write("			<span class=\"error-text\" id=\"nameValidation\"></span><br /><br /> \r\n");
      out.write("			Email : <input class=\"form-control\" type=\"email\" name=\"email\" />\r\n");
      out.write("			<span class=\"error-text\" id=\"emailValidation\"></span><br /> <br /> \r\n");
      out.write("			Password : <input class=\"form-control\" type=\"password\" name=\"password\" />\r\n");
      out.write("			<span class=\"error-text\" id=\"passwordValidation\"></span> <br /> <br /> \r\n");
      out.write("			Gender : <input type=\"radio\" name=\"gender\" value=\"Male\" />Male \r\n");
      out.write("					<input type=\"radio\" name=\"gender\" value=\"Female\" />Female<br /> \r\n");
      out.write("			Mobile: <input type=\"text\" class=\"form-control\" name=\"mobile\" maxlength=\"10\" minlength=\"10\" />\r\n");
      out.write("			<span class=\"error-text\" id=\"mobileValidation\"></span> <br /> <br />\r\n");
      out.write("			<!-- <input type=\"submit\" class=\"form-control btn btn-primary\" value=\"register\"> -->\r\n");
      out.write("			<input type=\"submit\" class=\"form-control btn btn-primary\" value=\"register\" onclick=\"return registerFormValidation();\">\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("	");

	} else {
	int id = Integer.parseInt(request.getParameter("id"));
	DBClass db = new DBClass();
	Student st = db.getDataByID(id);
	
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<form action=\"Edit?id=");
      out.print(st.getId());
      out.write("\" name=\"editForm\" method=\"Post\">\r\n");
      out.write("			Name : \r\n");
      out.write("			<input type=\"text\" name=\"name\" id=\"name\" value=\"");
      out.print(st.getName());
      out.write("\" />\r\n");
      out.write("			<span class=\"error-text\" id=\"nameValidationEdit\"></span><br /><br /> \r\n");
      out.write("			<input id=\"gender\" type=\"hidden\" value=\"");
      out.print(st.getGender());
      out.write("\" /> \r\n");
      out.write("			Email : \r\n");
      out.write("			<input type=\"email\" name=\"email\" id=\"email\" value=\"");
      out.print(st.getEmail());
      out.write("\" />\r\n");
      out.write("			<span class=\"error-text\" id=\"emailValidationEdit\"></span><br /><br /> <br /> <br /> \r\n");
      out.write("			Password : \r\n");
      out.write("			<input type=\"password\" name=\"password\" id=\"password\" value=\"");
      out.print(st.getPassword());
      out.write("\" />\r\n");
      out.write("			<span class=\"error-text\" id=\"passwordValidationEdit\"></span><br /><br /> <br /> <br />\r\n");
      out.write("			Gender : \r\n");
      out.write("			<input type=\"radio\" name=\"gender\" id=\"male\" value=\"Male\" />Male\r\n");
      out.write("			<input type=\"radio\" id=\"female\" name=\"gender\" value=\"Female\" />Female<br />\r\n");
      out.write("			Mobile: \r\n");
      out.write("			<input type=\"text\" name=\"mobile\" id=\"mobile\" minlength=\"10\" maxlength=\"10\" value=\"");
      out.print(st.getMobile());
      out.write("\" required/>\r\n");
      out.write("			<span class=\"error-text\" id=\"mobileValidationEdit\"></span><br /><br />  <br /> <br /> <input\r\n");
      out.write("				type=\"submit\" value=\"Update\" onclick=\"return editFormValidation();\">\r\n");
      out.write("			<!--  <input type=\"submit\" value=\"Update\"> -->\r\n");
      out.write("\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("	");

	}
	
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		let gender = document.getElementById(\"gender\")\r\n");
      out.write("		{\r\n");
      out.write("			if (gender.value == \"Male\")\r\n");
      out.write("				document.getElementById(\"male\").checked = true;\r\n");
      out.write("			else\r\n");
      out.write("				document.getElementById(\"female\").checked = true;\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
